name: ci

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - master
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

env:
  AWS_CODEARTIFACT_DOMAIN: pv-platforma
  POETRY_HTTP_BASIC_PV_PLATFORMA_USERNAME: aws

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: actions/cache@v1
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - uses: Gr1N/setup-poetry@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ secrets.AWS_REGION_DEV }}
      - name: Get AWS Code Artifact token
        run: >-
          echo "POETRY_HTTP_BASIC_PV_PLATFORMA_PASSWORD=$(aws
          codeartifact
          get-authorization-token
          --domain $AWS_CODEARTIFACT_DOMAIN
          --domain-owner ${{ secrets.AWS_CODEARTIFACT_DOMAIN_OWNER_DEV }}
          --query authorizationToken
          --output text)"
          >> $GITHUB_ENV
      - run: poetry install
      - run: poetry debug

      # Format.
      - name: Check Format
        run: poetry run invoke format

      # Lint.
      - name: Run linters
        run: poetry run invoke lint

      # Check.
      - name: Run static analysers
        run: poetry run invoke check

      # Docs.
      - name: Build the documentation
        run: poetry run invoke docs
      - name: Upload documentation for release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v1
        with:
          name: docs
          path: docs/build/html/

      # Test.
      - name: Run the unit tests
        run: poetry run invoke test
      - name: Report coverage to coveralls.io
        run: poetry run coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_HOST: ${{ secrets.COVERALLS_HOST }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_SERVICE_NAME: ${{ secrets.COVERALLS_SERVICE_NAME }}

      # Dist.
      - name: Build packages
        run: poetry build
      - name: Upload artifacts for release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v1
        with:
          name: wheel
          path: dist/

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - ci
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-verion: 3.8
      - uses: actions/cache@v1
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - uses: Gr1N/setup-poetry@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ secrets.AWS_REGION_DEV }}
      - name: Get AWS Code Artifact token
        run: >-
          echo "POETRY_HTTP_BASIC_PV_PLATFORMA_PASSWORD=$(aws
          codeartifact
          get-authorization-token
          --domain $AWS_CODEARTIFACT_DOMAIN
          --domain-owner ${{ secrets.AWS_CODEARTIFACT_DOMAIN_OWNER_DEV }}
          --query authorizationToken
          --output text)"
          >> $GITHUB_ENV
      - uses: actions/download-artifact@v1
        with:
          name: wheel
          path: dist/
      - name: Get latest Changelog Entry
        id: changelog_entry
        uses: mindsers/changelog-reader-action@v1.1.0
      - name: Publish the release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{ steps.changelog_entry.outputs.log_entry }}
          files: |
            dist/*
      # Only for public projects.
      #  - uses: actions/download-artifact@v1
      #   with:
      #     name: docs
      #     path: docs/build/html
      # - name: Publish the documentation
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./docs/build/html
      - name: publish the packages
        run: poetry run inv publish-packages
